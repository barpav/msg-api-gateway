user nginx;

worker_processes auto;

error_log /var/log/nginx/error.log error; # redirected to stderr by default
pid       /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # Elastic Common Schema (ECS) log format
    log_format access '{"timestamp": "$time_iso8601", "log.level": "info", "message": "$request - $status - $request_time s ($request_id)"}';
    
    access_log /var/log/nginx/access.log access; # redirected to stdout by default

    server {
        listen 80;
        proxy_set_header 'request-id' $request_id;
        proxy_set_header 'remote-addr' $remote_addr; # client IP     

        # All microservices use "/" instead of public endpoints
        location = /v1/users {
            include cors-support.conf;
            rewrite .+ / break; # rewrite "/v1/users" URI to "/"
            proxy_pass http://users-v1:8080;
        }

        location = /v1/sessions {
            include cors-support.conf;
            rewrite .+ / break; # rewrite "/v1/sessions" URI to "/"
            proxy_pass http://sessions-v1:8080;
        }

        location = /v1/files {
            include cors-support.conf;
            rewrite .+ / break; # rewrite "/v1/files" URI to "/"
            proxy_pass http://files-v1:8080;
        }

        location /v1/files/ {
            client_max_body_size 5M; # max file size to upload
            include cors-support.conf;
            rewrite ([^\/]+$) /$1 break; # rewrite "/v1/files/{id}" URI to "/{id}"
            proxy_pass http://files-v1:8080;
        }
    }
}